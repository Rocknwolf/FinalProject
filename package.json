{
  "scripts": {
    "build": "yarn --cwd ./frontend/ build && echo moving ./frontend/build to ./backend/build && rm -rf ./backend/build && mv ./frontend/build ./backend/ ",
    "dev": "gnome-terminal --tab -- bash -c 'yarn --cwd ./frontend/ start' && gnome-terminal --tab -- bash -c 'yarn --cwd ./backend/ dev'",
    "static": "gnome-terminal --tab -- bash -c 'yarn --cwd ./backend/ dev'",

    "start": "gnome-terminal --tab -- bash -c 'yarn --cwd ./backend/ start'",
    "stop": "yarn --cwd ./backend/ stop",
    "seed": "yarn --cwd ./backend/ seed",
    "down": "yarn --cwd ./backend/ down",

    "devSven": "gnome-terminal --tab -- bash -c 'yarn --cwd ./frontend/ startSven' && gnome-terminal --tab -- bash -c 'yarn --cwd ./backend/ dev'",

    "setDev": "bash -c 'cd ./backend/ && ln -sf env.dev.env .env'",
    "setProd": "bash -c 'cd ./backend/ && ln -sf env.prod.env .env'",

    "devWin": "start powershell -NoExit -Command \"yarn --cwd ./frontend/ start \" && start powershell -NoExit -Command \"yarn --cwd ./backend/ dev \"",
    "staticWin": "start powershell -NoExit -Command \"yarn --cwd ./backend/ dev \"",
    "startWin": "start powershell -NoExit -Command \"yarn --cwd ./backend/ start \"",
    
    "setDevWin":  "Start-Process powershell -Verb runAs -ArgumentList \"-NoExit -Command `\"cd $(pwd)/backend/ ; Remove-Item -Force .env; New-Item -ItemType SymbolicLink -Path .env -Target env.dev.env; cd ..\"",
    "setProdWin": "bash -c 'cd ./backend/ && ln -sf env.prod.env .env'",
    
    "devInstall": "gnome-terminal --tab -- bash -c 'cd ./frontend/ && yarn install' && gnome-terminal --tab -- bash -c 'cd ./backend/ && yarn install'",
    "devInstallWin": "start powershell -Command \"cd ./frontend/ ; yarn install \" && start powershell -Command \" cd ./backend/ ; yarn install \""

    "conBuild": "docker-compose up -d --build && echo \"*** Run 'yarn conStop' or 'yarn conDown' once you are done ***\"",
    "conDown": "docker-compose down",
    "conStop": "docker-compose stop",
    "conStart": "docker-compose start && echo \"*** Run 'yarn conStop' or 'yarn conDown' once you are done ***\"",

    "serverBuild": "rsync $(pwd)/mongo/mongo-init.js root@digitalOcean:$(pwd)/mongo/mongo-init.js && export COMPOSE_DOCKER_CLI_BUILD=0 && export DOCKER_HOST='ssh://digitalOcean' && docker-compose up -d --build",
    "serverPs": "docker-compose -H ssh://digitalOcean ps",
    "serverStop": "docker-compose -H ssh://digitalOcean stop",
    "serverStart": "docker-compose -H ssh://digitalOcean start"
  }
}
